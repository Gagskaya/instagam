{"version":3,"sources":["lib/firebase.js","constants/routes.js","context/firebase.js","context/user.js","services/firebase.js","helpers/protected.route.js","components/Profile.jsx","App.js","hooks/use-auth-listener.js","index.js"],"names":["firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","DASHBORD","LOGIN","SIGN_UP","PROFILE","NOT_FOUND","FirebaseContext","createContext","UserContext","doesUsernameExist","username","a","collection","where","get","result","docs","map","user","data","length","getUserByUsername","item","docId","id","getUserByUserId","userId","getSuggestedProfiles","following","limit","filter","profile","includes","updateLoggedInUserFollowing","loggedInUserDocId","profileId","doc","update","arrayUnion","updateFollowedUsersFollowers","spDocId","followers","getPhotos","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","photosWithUserDetails","ProtectedRoute","children","rest","render","location","React","cloneElement","to","pathname","ROUTES","state","from","Profile","history","useHistory","useParams","useState","setUser","userExists","setUserExist","useEffect","push","checkUserExists","className","Login","lazy","SignUp","Dashboard","NotFound","App","JSON","parse","localStorage","getItem","useContext","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","fallback","path","component","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.14625b12.chunk.js","sourcesContent":["import Firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// import { seedDatabase } from \"../seed\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDpdc7ivHIHIeYHSSYTZQoTa8ejW9kj-5o\",\r\n  authDomain: \"instagram-yt-34d29.firebaseapp.com\",\r\n  projectId: \"instagram-yt-34d29\",\r\n  storageBucket: \"instagram-yt-34d29.appspot.com\",\r\n  messagingSenderId: \"991983088876\",\r\n  appId: \"1:991983088876:web:b656b0202c5514b19061c9\",\r\n};\r\n\r\nconst firebase = Firebase.initializeApp(config);\r\nconst { FieldValue } = Firebase.firestore;\r\n// seedDatabase(firebase);\r\n\r\nexport { firebase, FieldValue };\r\n","export const DASHBORD = \"/\";\r\nexport const LOGIN = \"/login\";\r\nexport const SIGN_UP = \"/sign-up\";\r\nexport const PROFILE = \"/p/:username\";\r\nexport const NOT_FOUND = \"/not-found\";\r\n","import { createContext } from \"react\";\r\n\r\nexport const FirebaseContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);\r\n","import { firebase, FieldValue } from \"../lib/firebase\";\r\n\r\nexport async function doesUsernameExist(username) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"username\", \"==\", username)\r\n    .get();\r\n  return result.docs.map((user) => user.data().length > 0);\r\n}\r\nexport async function getUserByUsername(username) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"username\", \"==\", username)\r\n    .get();\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n}\r\nexport async function getUserByUserId(userId) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"userId\", \"==\", userId)\r\n    .get();\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n}\r\nexport async function getSuggestedProfiles(userId, following) {\r\n  const result = await firebase.firestore().collection(\"users\").limit(10).get();\r\n  return result.docs\r\n    .map((user) => ({ ...user.data(), docId: user.id }))\r\n    .filter(\r\n      (profile) =>\r\n        profile.userId !== userId && !following.includes(profile.userId)\r\n    );\r\n}\r\nexport async function updateLoggedInUserFollowing(\r\n  loggedInUserDocId,\r\n  profileId\r\n) {\r\n  return await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .doc(loggedInUserDocId)\r\n    .update({\r\n      following: FieldValue.arrayUnion(profileId),\r\n    });\r\n}\r\nexport async function updateFollowedUsersFollowers(userId, spDocId) {\r\n  return await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .doc(spDocId)\r\n    .update({\r\n      followers: FieldValue.arrayUnion(userId),\r\n    });\r\n}\r\nexport async function getPhotos(userId, following) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .where(\"userId\", \"in\", following)\r\n    .get();\r\n  const userFollowedPhotos = result.docs.map((photo) => ({\r\n    ...photo.data(),\r\n    docId: photo.id,\r\n  }));\r\n  const photosWithUserDetails = await Promise.all(\r\n    userFollowedPhotos.map(async (photo) => {\r\n      let userLikedPhoto = false;\r\n      if (photo.likes.includes(userId)) {\r\n        userLikedPhoto = true;\r\n      }\r\n      const user = await getUserByUserId(photo.userId);\r\n      const { username } = user[0];\r\n      return { username, ...photo, userLikedPhoto };\r\n    })\r\n  );\r\n  return photosWithUserDetails;\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\n\r\nexport default function ProtectedRoute({ user, children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        if (user) {\r\n          return React.cloneElement(children, { user });\r\n        }\r\n\r\n        if (!user) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: ROUTES.LOGIN,\r\n                state: { from: location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return null;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n  user: PropTypes.object,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import { useParams, useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport { getUserByUsername } from \"../services/firebase\";\r\n\r\nexport default function Profile() {\r\n  let history = useHistory();\r\n  const { username } = useParams();\r\n  const [user, setUser] = React.useState(null);\r\n  const [userExists, setUserExist] = React.useState(false);\r\n  React.useEffect(() => {\r\n    async function checkUserExists() {\r\n      const user = await getUserByUsername(username);\r\n      if (user.length > 0) {\r\n        setUser(user[0]);\r\n        setUserExist(true);\r\n      } else {\r\n        history.push(ROUTES.NOT_FOUND);\r\n      }\r\n    }\r\n    checkUserExists();\r\n  }, [username, history]);\r\n  return (\r\n    userExists && (\r\n      <div className=\"bg-gray-background\">\r\n        <div className=\"max-auto max-w-screen-lg\">{username}</div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React, { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport useAuthListener from \"./hooks/use-auth-listener\";\nimport * as ROUTES from \"./constants/routes\";\nimport { UserContext } from \"./context/user\";\nimport ProtectedRoute from \"./helpers/protected.route\";\nimport Profile from \"./components/Profile\";\n\nconst Login = lazy(() => import(\"./pages/login\"));\nconst SignUp = lazy(() => import(\"./pages/sign-up\"));\nconst Dashboard = lazy(() => import(\"./pages/dashboard\"));\nconst NotFound = lazy(() => import(\"./pages/not-found\"));\nfunction App() {\n  const { user } = useAuthListener();\n  return (\n    <UserContext.Provider value={{ user }}>\n      <Router>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <Route path={ROUTES.LOGIN} component={Login} exact />\n            <Route path={ROUTES.SIGN_UP} component={SignUp} exact />\n            <Route path={ROUTES.PROFILE} component={Profile} />\n            <ProtectedRoute user={user} path={ROUTES.DASHBORD} exact>\n              <Dashboard />\n            </ProtectedRoute>\n\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import { FirebaseContext } from \"../context/firebase\";\r\nimport React from \"react\";\r\nexport default function UseAuthListener() {\r\n  const [user, setUser] = React.useState(\r\n    JSON.parse(localStorage.getItem(\"authUser\"))\r\n  );\r\n  const { firebase } = React.useContext(FirebaseContext);\r\n  React.useEffect(() => {\r\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n        setUser(authUser);\r\n      } else {\r\n        localStorage.removeItem(\"authUser\");\r\n        setUser(null);\r\n      }\r\n    });\r\n    return () => listener();\r\n  }, [firebase]);\r\n  return { user };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { FirebaseContext } from \"./context/firebase\";\nimport { firebase, FieldValue } from \"./lib/firebase\";\nimport \"./styles/app.css\";\nReactDOM.render(\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}